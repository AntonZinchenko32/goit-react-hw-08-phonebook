{"version":3,"file":"static/js/946.7e69ad7e.chunk.js","mappings":"+NAGaA,EAAOC,EAAAA,GAAAA,KAAH,yCAGJC,EAAQD,EAAAA,GAAAA,MAAH,6F,SCFLE,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAejB,OACE,UAACL,EAAD,CAAMM,SAda,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfN,GACEO,EAAAA,EAAAA,GAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAGrCL,EAAKQ,OACN,EAG+BC,aAAa,MAA3C,WACE,UAAChB,EAAD,WAAO,YAEL,kBAAOiB,KAAK,OAAOP,KAAK,aAE1B,UAACV,EAAD,WAAO,SAEL,kBAAOiB,KAAK,QAAQP,KAAK,cAE3B,UAACV,EAAD,WAAO,YAEL,kBAAOiB,KAAK,WAAWP,KAAK,iBAE9B,mBAAQO,KAAK,SAAb,SAAsB,eAG3B,EClCc,SAASC,IACtB,OACE,0BAIE,SAACjB,EAAD,KAGL,C,6HCVDkB,EAAAA,EAAAA,SAAAA,QAAyB,+CAGzB,IAAMC,EAAgB,SAAAC,GACpBF,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAAA,iBAAwDE,EACzD,EAOYC,EAAM,mCAAG,WAAOZ,EAAMG,EAAOC,GAApB,gFACpBS,QAAQC,IAAI,CAAEd,KAAAA,EAAMG,MAAAA,EAAOC,SAAAA,IADP,SAEGK,EAAAA,EAAAA,KAAW,UAAW,CAAET,KAAAA,EAAMG,MAAAA,EAAOC,SAAAA,IAFxC,uBAEZW,EAFY,EAEZA,KACRL,EAAcK,EAAKJ,OAHC,kBAIbI,GAJa,2CAAH,0DAONC,EAAM,mCAAG,WAAOb,EAAOC,GAAd,yFACGK,EAAAA,EAAAA,KAAW,SAAU,CAAEN,MAAAA,EAAOC,SAAAA,IADjC,uBACZW,EADY,EACZA,KACRL,EAAcK,EAAKJ,OAFC,kBAGbI,GAHa,2CAAH,wDClBNhB,GAAWkB,EAAAA,EAAAA,IACtB,iBACA,gBAAGjB,EAAH,EAAGA,KAAMG,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,OAA+BQ,EAAOZ,EAAMG,EAAOC,EAAnD,IAGWc,GAAQD,EAAAA,EAAAA,IAAiB,cAAc,gBAAGd,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OAClDY,EAAOb,EAAOC,EADoC,G","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/index.jsx","Pages/Register/index.jsx","services/users-api.js","redux/auth/operations.js"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const Form = styled.form`\n  width: 320px;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n`;","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { Form, Label } from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label>\n        Username\n        <input type=\"text\" name=\"name\" />\n      </Label>\n      <Label>\n        Email\n        <input type=\"email\" name=\"email\" />\n      </Label>\n      <Label>\n        Password\n        <input type=\"password\" name=\"password\" />\n      </Label>\n      <button type=\"submit\">Register</button>\n    </Form>\n  );\n};\n","// import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      {/* <Helmet>\n        <title>Registration</title>\n      </Helmet> */}\n      <RegisterForm />\n    </div>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/users/';\n\n// Utility to add JWT\nconst setAuthHeader = token => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\n\n// Utility to remove JWT\n// const clearAuthHeader = () => {\n//   axios.defaults.headers.common.Authorization = '';\n// };\n\nexport const signUp = async (name, email, password) => {\n  console.log({ name, email, password });\n  const { data } = await axios.post('/signup', { name, email, password });\n  setAuthHeader(data.token);\n  return data;\n};\n\nexport const signIn = async (email, password) => {\n  const { data } = await axios.post('/login', { email, password });\n  setAuthHeader(data.token);\n  return data;\n};\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { signUp, signIn } from 'services/users-api';\n\nexport const register = createAsyncThunk(\n  'auth/register',\n  ({ name, email, password }) => signUp(name, email, password)\n);\n\nexport const logIn = createAsyncThunk('auth/login', ({ email, password }) =>\n  signIn(email, password)\n);\n"],"names":["Form","styled","Label","RegisterForm","dispatch","useDispatch","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","password","reset","autoComplete","type","Register","axios","setAuthHeader","token","signUp","console","log","data","signIn","createAsyncThunk","logIn"],"sourceRoot":""}