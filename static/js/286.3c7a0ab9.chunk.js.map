{"version":3,"file":"static/js/286.3c7a0ab9.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/index.jsx","components/Filter/Filter.styled.js","components/Filter/index.jsx","components/ContactItem/index.jsx","components/ContactList/index.jsx","Pages/Contacts/Contacts.styled.js","Pages/Contacts/index.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilterQuery = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterQuery],\n  (contacts, filterQuery) => {\n    if (filterQuery === '') return contacts;\n    else {\n      const filtredContacts = contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filterQuery.toLowerCase())\n      );\n\n      return filtredContacts;\n    }\n  }\n);\n","// redux\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact, fetchContacts } from 'redux/contacts/operations';\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nconst ContactForm = () => {\n  const contactsList = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const handleCheck = async (contacts, contactData) => {\n    const { name, number } = contactData;\n    const gotMatch = contacts.find(contact => {\n      return contact.name.toLowerCase() === name.toLowerCase();\n    });\n\n    if (!gotMatch) {\n      await dispatch(addContact({ name, number })).unwrap();\n      dispatch(fetchContacts());\n    } else {\n      alert(`${name} already in list`);\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const form = evt.currentTarget;\n\n    const { nameInput, numberInput } = evt.currentTarget.elements;\n\n    const name = nameInput.value.trim();\n    const number = numberInput.value.trim();\n\n    handleCheck(contactsList, { name, number });\n\n    form.reset();\n  };\n\n  return (\n    <Box\n      onSubmit={handleSubmit}\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1 },\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '20px',\n      }}\n      autoComplete=\"off\"\n    >\n      <div>\n        <TextField\n          label=\"Name\"\n          id=\"filled-size-small\"\n          variant=\"filled\"\n          size=\"small\"\n          name=\"nameInput\"\n          type=\"text\"\n        />\n        <TextField\n          label=\"Number\"\n          id=\"filled-size-normal\"\n          variant=\"filled\"\n          size=\"small\"\n          name=\"numberInput\"\n          type=\"tel\"\n        />\n      </div>\n      <Button\n        sx={{ height: '40px', marginLeft: '20px' }}\n        type=\"submit\"\n        variant=\"contained\"\n      >\n        Add Contact\n      </Button>\n    </Box>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  margin-bottom: 10px;\n  font-size: 24px;\n`;\n\nexport const Input = styled.input`\n  display: flex;\n  margin: 2px 0 35px 0;\n  width: 250px;\n  height: 28px;\n\n  border-radius: 3px;\n\n  font-size: large;\n`;\n","import { useDispatch } from 'react-redux';\nimport { setFilterQuery } from 'redux/filter/filterSlice';\nimport { nanoid } from 'nanoid';\n\nimport { Label, Input } from './Filter.styled';\n\nconst Filter = () => {\n  const filterInputId = nanoid();\n  const dispatch = useDispatch();\n  return (\n    <>\n      <Label htmlFor={filterInputId}>Find contacts by name</Label>\n      <Input\n        id={filterInputId}\n        onChange={evt => dispatch(setFilterQuery(evt.target.value))}\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import { useDispatch } from 'react-redux';\n\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\n\nimport ListItem from '@mui/material/ListItem';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\nimport ListItemText from '@mui/material/ListItemText';\n\nconst ContactItem = ({ name, id, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = async () => {\n    await dispatch(deleteContact(id)).unwrap();\n    dispatch(fetchContacts());\n  };\n\n  return (\n    <ListItem\n      secondaryAction={\n        <IconButton\n          onClick={() => handleDelete()}\n          edge=\"end\"\n          aria-label=\"delete\"\n        >\n          <DeleteIcon />\n        </IconButton>\n      }\n    >\n      <ListItemAvatar>\n        <Avatar>\n          <ContactPhoneIcon />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText primary={name} secondary={number} />\n    </ListItem>\n  );\n};\n\nexport default ContactItem;\n","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport ContactItem from 'components/ContactItem';\n\n// MUI\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport Grid from '@mui/material/Grid';\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  // MUi\n  function generate(element) {\n    return visibleContacts.map(value =>\n      React.cloneElement(element, {\n        key: value.id,\n        name: value.name,\n        number: value.number,\n        id: value.id,\n      })\n    );\n  }\n\n  const Demo = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.background.paper,\n  }));\n\n  return (\n    <Box sx={{ flexGrow: 1, maxWidth: 752 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Demo>\n            <List>{generate(<ContactItem />)}</List>\n          </Demo>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 15px;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: 40px;\n  color: #010101;\n`;\n","// React\nimport { useEffect } from 'react';\n// Components\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport { Loader } from 'components/Loader';\n// Styles\nimport { Container } from './Contacts.styled';\n// Redux\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <ContactForm />\n      <Filter />\n      {isLoading && !error && <Loader />}\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","filterQuery","contact","name","toLowerCase","includes","contactsList","useSelector","dispatch","useDispatch","handleCheck","contactData","number","find","addContact","unwrap","fetchContacts","alert","Box","onSubmit","evt","preventDefault","form","currentTarget","elements","nameInput","numberInput","value","trim","reset","component","sx","m","display","alignItems","marginBottom","autoComplete","TextField","label","id","variant","size","type","Button","height","marginLeft","Label","styled","Input","filterInputId","nanoid","htmlFor","onChange","setFilterQuery","target","handleDelete","deleteContact","ListItem","secondaryAction","IconButton","onClick","edge","Delete","ListItemAvatar","Avatar","ContactPhone","ListItemText","primary","secondary","visibleContacts","element","Demo","backgroundColor","theme","palette","background","paper","flexGrow","maxWidth","Grid","container","spacing","item","xs","List","map","React","key","Container","useEffect","Loader"],"sourceRoot":""}